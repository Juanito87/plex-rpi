# Habilitar interfaz web
web_server: yes

# Archivo con variables de configuración
variables: secrets.yml

# Plantillas de configuración reutilizables, separadas por tipo
templates:
  #Contenido
  tv:
    configure_series:
      from:
        entry_list: "{? listname.series ?}"
      settings:
          exact: yes
          propers: 12 hours
          quality: 720p+ hdtv+
    priority: 2
    seen: local
    accept_all: yes
    trakt_lookup: yes  # can also use imdb_lookup or tmdb_lookup

  anime:
    configure_series:
      from:
        entry_list: "{? listname.anime ?}"
      settings:
          exact: yes
          propers: 12 hours
          quality: 720p+ hdtv+
          special_ids:
            - OVA
    priority: 2
    seen: local
    no_entries_ok: yes
    accept_all: yes
    trakt_lookup: yes  # can also use imdb_lookup or tmdb_lookup

  movies:
    movie_list: "{? listname.movie ?}"
    quality: 1080p webdl+ !10bit !h265
    content_size:
      min: 2000
      max: 7999
    seen: local
    no_entries_ok: yes
    accept_all: yes
    trakt_lookup: yes  # can also use imdb_lookup or tmdb_lookup
    priority: 10 # run after the movie queue fill task

  anime-movies:
    movie_list: "{? listname.animemovies ?}"
    quality: 1080p webdl+ !10bit !h265
    content_size:
      min: 2000
      max: 7999
    seen: local
    no_entries_ok: yes
    accept_all: yes
    trakt_lookup: yes  # can also use imdb_lookup or tmdb_lookup
    priority: 10 # run after the movie queue fill task

  # Configuración de transmission
  transmission-anchors:
    _transmission-settings: &transmission-settings
      host: "{? transmission.host ?}"
      port: 9091
      username: "{? transmission.user ?}"
      password: "{? transmission.pass ?}"

  # Expresiones regulares para descartar contenido
  reject:
    regexp:
      reject:
        - \b(s|d)ub(s|bed|lado|titulado)?\b
        - \bhc\b
        - \bdual\b
        - \b3d\b
        - \bfre(nch)?\b
        - \bita(lian)?\b
        - \bspa(nish)?\b
        - \bger(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
        - \btamil\b
        - \bhindi\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

  anime-reject:
    regexp:
      reject:
        - \bdub\b
        - \bhard(subs|subbed)?\b
        - \bpv\b
        - \b60fps\b


  # Configuración global
  # Requiere el plugin log_filter, se debe instalar.
  # La carpeta plugin debe ponerse en flexget una vez terminado
  global:
    no_entries_ok: yes
    # Elimina caracteres no validos para el OS indicado, link a la documentación 
    # para más detalles https://flexget.com/Plugins/pathscrub
    pathscrub: windows
    log_filter:
          task:
            - marked seen
            - because quality already downloaded
            - because episode has already been downloaded
            - Task does not have any
          move:
            - left because it exceeds safety value
            - does not exists (anymore)
          urlrewriter:
            - URL rewritten to
          enzyme.mkv:
            - Reading
            - Processing
          enzyme.parsers.ebml.core:
            - ignored
            - Maximum level
          subliminal.video:
            - Scanning video
          parser_internal:
            - appears to be an episode pack
          content_size:
            - rejecting
          search_rss:
            - Error
          assume_quality:
            - ""
          utils.requests:
            - Waiting

  # Configuración de descargas
  torrents:
    torrent_alive:
      min_seeds: 3
      reject_for: 15 minutes
    magnets: yes
    domain_delay:
      thepiratebay.se: 10 seconds
      thepiratebay.org: 10 seconds
      limetorrents: 3 seconds
      anidex.info: 3 seconds
      bt-chat.com: 1 seconds
      eztv.re: 1 seconds
      showrss.info: 2 seconds
      torlock.eu: 1 seconds
      torrenticity.com: 1 seconds
      zooqle.com: 2 seconds
    urlrewrite:
      torrentz2:
        regexp: 'http://torrentz2.eu/(?P<id>\w*)'
        format: 'magnet:?xt=urn:btih:\g<id>&dn=&tr=udp%3A%2F%2Ftracker.openbittorrent.com%3A80&tr=udp%3A%2F%2Fopen.demonii.com%3A1337%2Fannounce&tr=udp%3A%2F%2Ftracker.leechers-paradise.org%3A6969%2Fannounce&tr=udp%3A%2F%2Ftracker.coppersurfer.tk%3A6969%2Fannounce'

  disable-seen-retry:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

  transmission-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      content_filename: "{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}} - {{series_id}}{% if tvdb_ep_name|default(False) %} - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downseries ?}{{tvdb_series_name|default(series_name)|pathscrub}}"

  transmission-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      include_subs: yes
      rename_like_files: yes
      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %} - [{{quality}}]{% endif %}{% if release_group|default(False) %} - [{{release_group}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downmovies ?}{{movie_name|pathscrub}}"

  transmission-anime-series:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      content_filename: "{{series_name}} - ep{{series_id}} - [{{quality}}]"
      path: "/{? folder.root ?}{? folder.downanime ?}{{series_name|pathscrub}}"

  transmission-anime-movies:
    transmission:
      <<: *transmission-settings
      main_file_only: yes
      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %} - [{{quality}}]{% endif %}{% if release_group|default(False) %} - [{{release_group}}]{% endif %}"
      path: "/{? folder.root ?}{? folder.downanimemovies ?}{{regexp}}"

  # Configuración de metadata
  series-metainfo:
    metainfo_series: yes
    thetvdb_lookup: yes
    parsing:
      series: guessit

  movies-metainfo:
    tmdb_lookup: yes
    parsing:
      movie: guessit
    metainfo_movie: yes

tasks:
  # Esta tarea revisa las listas de series y los capítulos marcados como mirados,
  # y utiliza la información para marcar el inicio de la serie para descargar.
  # Aplica la misma lógica a los capítulos de anime.

  sync-tv:
    template: 
      - disable-seen-retry
      - series-metainfo
    accept_all: yes
    set_series_begin: yes
    list_clear:
      what:
        - entry_list: "{? listname.series ?}"
    next_trakt_episodes:
        username: "{? trakt.username ?}"
        account: "{? trakt.account ?}"
        context: watched
        list: "{? trakt.series ?}"
    list_add:
      - entry_list: "{? listname.series ?}"

  sync-anime:
    template:
      - disable-seen-retry
      - series-metainfo
    accept_all: yes
    list_clear:
      what:
        - entry_list: "{? listname.anime ?}"
    next_trakt_episodes:
        username: "{? trakt.username ?}"
        account: "{? trakt.account ?}" 
        context: watched
        list: "{? trakt.animeseries ?}"
    list_add:
      - entry_list: "{? listname.anime ?}"

  # Obtiene la lista de peliculas de las listas solictadas.
  # Se utiliza una tarea por lista para tener más control.

  sync-movies:
    template:
      - disable-seen-retry
      - movies-metainfo
    trakt_list:
      username: "{? trakt.username ?}"
      account: "{? trakt.account ?}"
      strip_dates: yes
      type: movies
      list: "{? trakt.movies ?}"
    accept_all: yes
    list_add:
      - movie_list: "{? listname.movie ?}"

  sync-anime-movies:
    trakt_list:
      username: "{? trakt.username ?}"
      account: "{? trakt.account ?}"
      strip_dates: yes
      type: movies
      list: "{? trakt.animemovies ?}"
    accept_all: yes
    list_add:
      - movie_list: "{? listname.animemovies ?}"
    #set:
      #title: "{{ {? listname.animemovies ?} |re_replace('[-/:;.★](?=[a-zA-Z])', ' ')|re_replace('[:;](?![a-zA-Z])|[`´()]', '')|re_replace('  +', ' ')}}"
    list_add:
      - regexp_list: "{? listname.animemovies ?}"

  # Tareas de descarga de contenido

  discover-shows:
    template:
      - tv
      - reject
      - torrents
      - transmission-series
      - series-metainfo
    cfscraper: yes
    no_entries_ok: yes
    discover:
      what:
        - trakt_list:
            username: "{? trakt.username ?}"
            account: "{? trakt.account ?}"
            strip_dates: yes
            list: "{? trakt.series ?}"
            type: shows
        - next_series_seasons: true
        - next_trakt_episodes:
            username: "{? trakt.username ?}"
            account: "{? trakt.account ?}"
            context: watched
            list: "{? trakt.series ?}"
      from:
        - argenteam:
            force_subtitles: yes
        - piratebay:
            category: "highres tv"
            sort_by: leechers
            url: https://piratebaymirror.eu
        - rarbg:
            category: [2, 18, 41, 49]
        - limetorrents:
            category: "tv"
        - search_rss:
            url: https://torrentz2.eu/feed?f=\{{search_term}}
            url: http://showrss.info/user/192744.rss?magnets=true&namespaces=true&name=null&quality=anyhd&re=yes
            url: https://eztv.re/ezrss.xml
            url: http://zamunda.net/rss.php?cat=25,7,33&passkey=8d30f7c2fa41f3f04c057fe7f7d3d7e3&file=.xml
            url: https://www.limetorrents.info/rss/20
            url: https://zooqle.com/search?q=%2A+category%3ATV&fmt=rss
            all_entries: no
            ascii: yes
            escape: yes
            link:
              - link
              - magneturi
      interval: 1 days
    exists:
      - "/{? folder.root ?}{? folder.downseries ?}"
      - "/{? folder.root ?}{? folder.series ?}"
    list_match:
      from:
        - entry_list: "{? listname.series ?}"
      action: accept
      remove_on_match: no
      single_match: yes

  discover-anime:
    template:
      - anime
      - anime-reject
      - torrents
      - transmission-anime-series
    cfscraper: yes
    no_entries_ok: yes
    discover:
      what:
        - trakt_list:
            username: "{? trakt.username ?}"
            account: "{? trakt.account ?}"
            strip_dates: yes
            list: "{? trakt.animeseries ?}"
            type: shows
        #- next_series_seasons: true
        - next_trakt_episodes:
            username: "{? trakt.username ?}"
            account: "{? trakt.account ?}" 
            context: watched
            list: "{? trakt.animeseries ?}"
      from:
        - argenteam:
            force_subtitles: yes
        - piratebay:
            category: "highres tv"
            sort_by: leechers
            url: https://piratebaymirror.eu
        - rarbg:
            category: [2, 18, 41, 49]
        - limetorrents:
            category: "anime"
        - search_rss:
            url: https://torrentz2.eu/feed?f=\{{search_term}}
            url: http://showrss.info/user/192744.rss?magnets=true&namespaces=true&name=null&quality=anyhd&re=yes
            url: https://eztv.re/ezrss.xml
            url: http://zamunda.net/rss.php?cat=25,7,33&passkey=8d30f7c2fa41f3f04c057fe7f7d3d7e3&file=.xml
            url: https://www.limetorrents.info/rss/20
            url: https://zooqle.com/search?q=%2A+category%3ATV&fmt=rss
            url: https://nyaa.si/?page=rss&c=1_2&f=2&q=\{{search_term}}
            url: https://anidex.info/rss/?cat=1&lang_id=1
            all_entries: no
            ascii: yes
            escape: yes
            link:
              - link
              - magneturi
      interval: 1 days
    exists:
       - "/{? folder.root ?}{? folder.downanime ?}"
       - "/{? folder.root ?}{? folder.anime ?}"
    list_match:
      from:
        - entry_list: "{? listname.anime ?}"
      action: accept
      remove_on_match: no
      single_match: yes

  discover-movies:
    template:
      - movies
      - reject
      - torrents
      - transmission-movies
    cfscraper: yes
    exists_movie:
      - "/{? folder.root ?}{? folder.downmovies ?}"
      - "/{? folder.root ?}{? folder.movies ?}"
    seen: local
    discover:
      what:
        - movie_list: 
            list_name: "{? listname.movie ?}"
            strip_year: yes
      from:
        - argenteam:
            force_subtitles: yes
        - piratebay:
            category: "highres movies"
            sort_by: leechers
            url: https://piratebaymirror.eu
        - rarbg:
            category: [44, 54]
        - limetorrents:
            category: "movies"
        - search_rss:
            url: https://torrentz2.eu/feed?f=\{{search_term}}
            url: http://showrss.info/user/192744.rss?magnets=true&namespaces=true&name=null&quality=anyhd&re=yes
            url: https://eztv.re/ezrss.xml
            url: http://zamunda.net/rss.php?cat=25,7,33&passkey=8d30f7c2fa41f3f04c057fe7f7d3d7e3&file=.xml
            url: https://www.limetorrents.info/rss/20
            url: https://zooqle.com/search?q=%2A+category%3ATV&fmt=rss
            all_entries: no
            ascii: yes
            escape: yes
            link:
              - link
              - magneturi
      interval: 1 days
    exists:
       - "/{? folder.root ?}{? folder.downmovies ?}"
       - "/{? folder.root ?}{? folder.movies ?}"
    list_match:
      from:
        - movie_list: "{? listname.movie ?}"
      action: accept
      remove_on_match: no
      single_match: yes

  discover-anime-movies:
    template:
      - anime-movies
      - anime-reject
      - torrents
      - transmission-anime-movies
    cfscraper: yes
    discover:
      what:
        - movie_list:
            list_name: "{? listname.animemovies ?}"
            strip_year: yes
      from:
        - argenteam:
            force_subtitles: yes
        - piratebay:
            category: "highres movies"
            sort_by: leechers
            url: https://piratebaymirror.eu
        - rarbg:
            category: [44, 54]
        - limetorrents:
            category: "anime"
        - search_rss:
            url: https://torrentz2.eu/feed?f=\{{search_term}}
            url: http://showrss.info/user/192744.rss?magnets=true&namespaces=true&name=null&quality=anyhd&re=yes
            url: https://eztv.re/ezrss.xml
            url: http://zamunda.net/rss.php?cat=25,7,33&passkey=8d30f7c2fa41f3f04c057fe7f7d3d7e3&file=.xml
            url: https://www.limetorrents.info/rss/20
            url: https://zooqle.com/search?q=%2A+category%3ATV&fmt=rss
            url: https://nyaa.si/?page=rss&c=1_2&f=2&q=\{{search_term}}
            url: https://anidex.info/rss/?cat=1&lang_id=1
            all_entries: no
            ascii: yes
            escape: yes
            link:
              - link
              - magneturi
      interval: 1 days
    exists:
       - "/{? folder.root ?}{? folder.downanimemovies ?}"
       - "/{? folder.root ?}{? folder.animemovies ?}"
    list_match:
      from:
        - movie_list: "{? listname.animemovies ?}"
      action: accept
      remove_on_match: no
      single_match: yes

  # Limpieza

  remove-stale-torrents:
    from_transmission:
      host: transmission
      port: 9091
      username: "{? transmission.user ?}"
      password: "{? transmission.pass ?}"
    disable: [seen, seen_info_hash]
    if:
      - transmission_progress == 100: accept
      #- not transmission_seed_ratio_ok: reject
      - not transmission_idle_limit_ok: reject
    transmission:
      <<: *transmission-settings
      action: purge

  # Gestión de subtitulos
  find-subtitles-series:
    priority: 21
    template:
      - disable-seen-retry
    filesystem:
      path: "/{? folder.root ?}{? folder.downseries ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    seen: local
    subliminal:
      languages:
        - es
        - en
      exact_match: no
      single: no
      providers: [opensubtitles, addic7ed, tvsubtitles, podnapisi]
      authentication:
        opensubtitles:
          username: "{? subtitles.user ?}"
          password: "{? subtitles.pass ?}"
        addic7ed:
          username: "{? subtitles.user ?}"
          password: "{? subtitles.pass ?}"

  find-subtitles-movies:
    priority: 22
    template:
      - disable-seen-retry
    filesystem:
      path: "/{? folder.root ?}{? folder.downmovies ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    seen: local
    subliminal:
      languages:
        - es
        - en
      exact_match: no
      single: no
      providers: [opensubtitles, addic7ed, tvsubtitles, podnapisi]
      authentication:
        opensubtitles:
          username: "{? subtitles.user ?}"
          password: "{? subtitles.pass ?}"
        addic7ed:
          username: "{? subtitles.user ?}"
          password: "{? subtitles.pass ?}"

  # Mover, renombrar y transcodear descargas
  move-series:
    priority: 41
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.downseries ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    exec:
      auto_escape: yes
      on_output:
       for_entries: |
         if mediainfo "{{ location }}" | grep EAC3; then
           ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/{? folder.root ?}{? folder.downseries ?}/{{ tvdb_series_name }}/Season {{ series_season }}{{ location | pathext }}"
                    fi
    move:
      to: "/{? folder.root ?}{? folder.series ?}{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{series_season|pad(2)}}/"
      rename: "{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}} - {{series_id}}{% if tvdb_ep_name|default(False) %} - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downseries ?}"* -type d -empty -delete

  move-anime-series:
    priority: 41
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.downanime ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    exec:
      auto_escape: yes
      on_output:
       for_entries: |
         if mediainfo "{{ location }}" | grep EAC3; then
           ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/{? folder.root ?}{? folder.downanime ?}/{{ tvdb_series_name }}/Season {{ series_season }}{{ location | pathext }}"
                    fi
    move:
      to: "/{? folder.root ?}{? folder.anime ?}{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{series_season|pad(2)}}/"
      rename: "{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}} - {{series_id}}{% if tvdb_ep_name|default(False) %} - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.anime ?}"* -type d -empty -delete

  move-anime-movies:
    priority: 41
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.downanimemovies ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    exec:
      auto_escape: yes
      on_output:
       for_entries: |
         if mediainfo "{{ location }}" | grep EAC3; then
           ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/{? folder.root ?}{? folder.dowanimemovries ?}/{{ tvdb_series_name }}/Season {{ series_season }}{{ location | pathext }}"
                    fi
    move:
      to: "/{? folder.root ?}{? folder.animemovies ?}{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{series_season|pad(2)}}/"
      rename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %} - [{{quality}}]{% endif %}{% if release_group|default(False) %} - [{{release_group}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downanimemovies ?}"* -type d -empty -delete

  move-movies:
    priority: 41
    template:
      - disable-seen-retry
      - movies-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.downmovies ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    exec:
      auto_escape: yes
      on_output:
       for_entries: |
         if mediainfo "{{ location }}" | grep EAC3; then
           ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/{? folder.root ?}{? folder.downmovies ?}/{{ tmdb_series_name }}{{ location | pathext }}"
                    fi
    move:
      to: "/{? folder.root ?}{? folder.movies ?}/ {{tmdb_movies_name|escape|replace('&#39;', '')|pathscrub}}"
      rename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %} - [{{quality}}]{% endif %}{% if release_group|default(False) %} - [{{release_group}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      clean_source: 50
    list_add:
      - subtitle_list:
          list: subtitles
          remove_after: 7 days
    exec:
      on_exit:
        phase: find "/{? folder.root ?}{? folder.downmovies ?}"* -type d -empty -delete

# Cronograma de tareas
schedules:
  # Programación las tareas
  - tasks: ['move-*', 'remove-*']
    schedule:
      hour: 5
      minute: 15

  - tasks: 'sync-*'
    interval: 
      minutes: 600

  - tasks: ['discover-*']
    interval: 
      minutes: 600

  - tasks: ['find-*']
    schedule:
      hour: 4
      minute: 30
